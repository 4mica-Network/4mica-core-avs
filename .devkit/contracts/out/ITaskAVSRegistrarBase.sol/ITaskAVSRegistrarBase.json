{"abi":[{"type":"function","name":"deregisterOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","internalType":"uint32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAVS","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getAvsConfig","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct ITaskAVSRegistrarBaseTypes.AvsConfig","components":[{"name":"aggregatorOperatorSetId","type":"uint32","internalType":"uint32"},{"name":"executorOperatorSetIds","type":"uint32[]","internalType":"uint32[]"}]}],"stateMutability":"view"},{"type":"function","name":"getOperatorSocket","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"registerOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","internalType":"uint32[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAvsConfig","inputs":[{"name":"config","type":"tuple","internalType":"struct ITaskAVSRegistrarBaseTypes.AvsConfig","components":[{"name":"aggregatorOperatorSetId","type":"uint32","internalType":"uint32"},{"name":"executorOperatorSetIds","type":"uint32[]","internalType":"uint32[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsAVS","inputs":[{"name":"avs","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"updateSocket","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"socket","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AvsConfigSet","inputs":[{"name":"aggregatorOperatorSetId","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"executorOperatorSetIds","type":"uint32[]","indexed":false,"internalType":"uint32[]"}],"anonymous":false},{"type":"event","name":"OperatorDeregistered","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","indexed":false,"internalType":"uint32[]"}],"anonymous":false},{"type":"event","name":"OperatorRegistered","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","indexed":false,"internalType":"uint32[]"}],"anonymous":false},{"type":"event","name":"OperatorSocketSet","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"socket","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"error","name":"CallerNotOperator","inputs":[]},{"type":"error","name":"DataLengthMismatch","inputs":[]},{"type":"error","name":"DuplicateExecutorOperatorSetId","inputs":[]},{"type":"error","name":"ExecutorOperatorSetIdsEmpty","inputs":[]},{"type":"error","name":"InvalidAggregatorOperatorSetId","inputs":[]},{"type":"error","name":"KeyNotRegistered","inputs":[]},{"type":"error","name":"NotAllocationManager","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"deregisterOperator(address,address,uint32[])":"303ca956","getAVS()":"f62b9a54","getAvsConfig()":"41f548f0","getOperatorSocket(address)":"8481931d","registerOperator(address,address,uint32[],bytes)":"c63fd502","setAvsConfig((uint32,uint32[]))":"d1f2e81d","supportsAVS(address)":"b5265787","updateSocket(address,string)":"6591666a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CallerNotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateExecutorOperatorSetId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutorOperatorSetIdsEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAggregatorOperatorSetId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllocationManager\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"AvsConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"socket\",\"type\":\"string\"}],\"name\":\"OperatorSocketSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAVS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvsConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"uint32[]\",\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct ITaskAVSRegistrarBaseTypes.AvsConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorSocket\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"uint32[]\",\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct ITaskAVSRegistrarBaseTypes.AvsConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setAvsConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"supportsAVS\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"socket\",\"type\":\"string\"}],\"name\":\"updateSocket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"AvsConfigSet(uint32,uint32[])\":{\"params\":{\"aggregatorOperatorSetId\":\"The operator set ID responsible for aggregating results\",\"executorOperatorSetIds\":\"Array of operator set IDs responsible for executing tasks\"}}},\"kind\":\"dev\",\"methods\":{\"deregisterOperator(address,address,uint32[])\":{\"params\":{\"avs\":\"the AVS the operator is deregistering from. This should be the same as IAVSRegistrar.avs()\",\"operator\":\"the deregistering operator\",\"operatorSetIds\":\"the list of operator set ids being deregistered from\"}},\"getAvsConfig()\":{\"returns\":{\"_0\":\"Configuration for the AVS\"}},\"getOperatorSocket(address)\":{\"params\":{\"operator\":\"The operator to get the socket for.\"},\"returns\":{\"_0\":\"The socket for the operator.\"}},\"registerOperator(address,address,uint32[],bytes)\":{\"params\":{\"avs\":\"the AVS the operator is registering for. This should be the same as IAVSRegistrar.avs()\",\"data\":\"arbitrary data the operator can provide as part of registration\",\"operator\":\"the registering operator\",\"operatorSetIds\":\"the list of operator set ids being registered for\"}},\"setAvsConfig((uint32,uint32[]))\":{\"details\":\"The executorOperatorSetIds must be monotonically increasing.\",\"params\":{\"config\":\"Configuration for the AVS\"}},\"supportsAVS(address)\":{\"params\":{\"avs\":\"the AVS to check\"},\"returns\":{\"_0\":\"true if the AVS is supported, false otherwise\"}},\"updateSocket(address,string)\":{\"details\":\"This function can only be called by the operator themselves.\",\"params\":{\"operator\":\"The operator to set the socket for.\",\"socket\":\"The socket to set for the operator.\"}}},\"title\":\"ITaskAVSRegistrarBase\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerNotOperator()\":[{\"notice\":\"Thrown when the caller is not the operator\"}],\"DataLengthMismatch()\":[{\"notice\":\"Thrown when the data length mismatch\"}],\"DuplicateExecutorOperatorSetId()\":[{\"notice\":\"Thrown when executor operator set ids are not in monotonically increasing order (duplicate or unsorted)\"}],\"ExecutorOperatorSetIdsEmpty()\":[{\"notice\":\"Thrown when executor operator set ids are empty\"}],\"InvalidAggregatorOperatorSetId()\":[{\"notice\":\"Thrown when an aggregator operator set id is also an executor operator set id\"}],\"KeyNotRegistered()\":[{\"notice\":\"Thrown when a key is not registered\"}],\"NotAllocationManager()\":[{\"notice\":\"Thrown when the caller is not the allocation manager\"}]},\"events\":{\"AvsConfigSet(uint32,uint32[])\":{\"notice\":\"Emitted when the AVS configuration is set\"},\"OperatorDeregistered(address,uint32[])\":{\"notice\":\"Emitted when an operator is deregistered\"},\"OperatorRegistered(address,uint32[])\":{\"notice\":\"Emitted when a new operator is registered\"},\"OperatorSocketSet(address,string)\":{\"notice\":\"Emitted when an operator socket is set\"}},\"kind\":\"user\",\"methods\":{\"deregisterOperator(address,address,uint32[])\":{\"notice\":\"Called by the AllocationManager when an operator is deregistered from one or more operator sets. If this method reverts, it is ignored.\"},\"getAVS()\":{\"notice\":\"Returns the address of the AVS in EigenLayer core\"},\"getAvsConfig()\":{\"notice\":\"Gets the configuration for this AVS\"},\"getOperatorSocket(address)\":{\"notice\":\"Gets the socket for an operator.\"},\"registerOperator(address,address,uint32[],bytes)\":{\"notice\":\"Called by the AllocationManager when an operator wants to register for one or more operator sets. This method should revert if registration is unsuccessful.\"},\"setAvsConfig((uint32,uint32[]))\":{\"notice\":\"Sets the configuration for this AVS\"},\"supportsAVS(address)\":{\"notice\":\"Returns true if the AVS is supported by the registrar\"},\"updateSocket(address,string)\":{\"notice\":\"Updates the socket for an operator.\"}},\"notice\":\"Interface for TaskAVSRegistrarBase contract that manages AVS configuration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/interfaces/ITaskAVSRegistrarBase.sol\":\"ITaskAVSRegistrarBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":@project/=../../contracts/src/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"lib/eigenlayer-middleware/src/interfaces/IAVSRegistrarInternal.sol\":{\"keccak256\":\"0x27f7c7331ed16eb569c3e5aa57b0b8f838bf77907963b0973b9f2eec22a70168\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2f8cdc5a91193a414a7b7a613d061db85be01f9b4fe00d7f7f75d2e382e688db\",\"dweb:/ipfs/QmdbKj2TXBzEnzisnqDnL4ZQVY7NtSzY8uuASMyZxwS8kp\"]},\"lib/eigenlayer-middleware/src/interfaces/ISocketRegistryV2.sol\":{\"keccak256\":\"0xa65012d0670c06815d49c8a64c5d437be4ca566190d444140e481f1299bc2916\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://86f36f5e6ab40639ea28813b515120b82efb5f6b72294a0f85671f0de2f8db53\",\"dweb:/ipfs/QmQc1YG7UHR6TFnxS7rD5wTnVRBKVCHyUqvgFbVX5zUN6d\"]},\"lib/eigenlayer-middleware/src/interfaces/ITaskAVSRegistrarBase.sol\":{\"keccak256\":\"0xd349aeca3fe4906b3adc1bab00fcf7d38cd359e14e9032b374540952ef692990\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e537b35544eb61ddf83cd251cc164e4a4544650cdf3aa7bbc76827eeae7905d\",\"dweb:/ipfs/QmbyYhVH5gLEe8eYw1LMK7D97uuT928zhq12HMcmzNTev6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CallerNotOperator"},{"inputs":[],"type":"error","name":"DataLengthMismatch"},{"inputs":[],"type":"error","name":"DuplicateExecutorOperatorSetId"},{"inputs":[],"type":"error","name":"ExecutorOperatorSetIdsEmpty"},{"inputs":[],"type":"error","name":"InvalidAggregatorOperatorSetId"},{"inputs":[],"type":"error","name":"KeyNotRegistered"},{"inputs":[],"type":"error","name":"NotAllocationManager"},{"inputs":[{"internalType":"uint32","name":"aggregatorOperatorSetId","type":"uint32","indexed":false},{"internalType":"uint32[]","name":"executorOperatorSetIds","type":"uint32[]","indexed":false}],"type":"event","name":"AvsConfigSet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]","indexed":false}],"type":"event","name":"OperatorDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]","indexed":false}],"type":"event","name":"OperatorRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"string","name":"socket","type":"string","indexed":false}],"type":"event","name":"OperatorSocketSet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[],"stateMutability":"view","type":"function","name":"getAVS","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAvsConfig","outputs":[{"internalType":"struct ITaskAVSRegistrarBaseTypes.AvsConfig","name":"","type":"tuple","components":[{"internalType":"uint32","name":"aggregatorOperatorSetId","type":"uint32"},{"internalType":"uint32[]","name":"executorOperatorSetIds","type":"uint32[]"}]}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getOperatorSocket","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerOperator"},{"inputs":[{"internalType":"struct ITaskAVSRegistrarBaseTypes.AvsConfig","name":"config","type":"tuple","components":[{"internalType":"uint32","name":"aggregatorOperatorSetId","type":"uint32"},{"internalType":"uint32[]","name":"executorOperatorSetIds","type":"uint32[]"}]}],"stateMutability":"nonpayable","type":"function","name":"setAvsConfig"},{"inputs":[{"internalType":"address","name":"avs","type":"address"}],"stateMutability":"view","type":"function","name":"supportsAVS","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"string","name":"socket","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateSocket"}],"devdoc":{"kind":"dev","methods":{"deregisterOperator(address,address,uint32[])":{"params":{"avs":"the AVS the operator is deregistering from. This should be the same as IAVSRegistrar.avs()","operator":"the deregistering operator","operatorSetIds":"the list of operator set ids being deregistered from"}},"getAvsConfig()":{"returns":{"_0":"Configuration for the AVS"}},"getOperatorSocket(address)":{"params":{"operator":"The operator to get the socket for."},"returns":{"_0":"The socket for the operator."}},"registerOperator(address,address,uint32[],bytes)":{"params":{"avs":"the AVS the operator is registering for. This should be the same as IAVSRegistrar.avs()","data":"arbitrary data the operator can provide as part of registration","operator":"the registering operator","operatorSetIds":"the list of operator set ids being registered for"}},"setAvsConfig((uint32,uint32[]))":{"details":"The executorOperatorSetIds must be monotonically increasing.","params":{"config":"Configuration for the AVS"}},"supportsAVS(address)":{"params":{"avs":"the AVS to check"},"returns":{"_0":"true if the AVS is supported, false otherwise"}},"updateSocket(address,string)":{"details":"This function can only be called by the operator themselves.","params":{"operator":"The operator to set the socket for.","socket":"The socket to set for the operator."}}},"version":1},"userdoc":{"kind":"user","methods":{"deregisterOperator(address,address,uint32[])":{"notice":"Called by the AllocationManager when an operator is deregistered from one or more operator sets. If this method reverts, it is ignored."},"getAVS()":{"notice":"Returns the address of the AVS in EigenLayer core"},"getAvsConfig()":{"notice":"Gets the configuration for this AVS"},"getOperatorSocket(address)":{"notice":"Gets the socket for an operator."},"registerOperator(address,address,uint32[],bytes)":{"notice":"Called by the AllocationManager when an operator wants to register for one or more operator sets. This method should revert if registration is unsuccessful."},"setAvsConfig((uint32,uint32[]))":{"notice":"Sets the configuration for this AVS"},"supportsAVS(address)":{"notice":"Returns true if the AVS is supported by the registrar"},"updateSocket(address,string)":{"notice":"Updates the socket for an operator."}},"version":1}},"settings":{"remappings":["@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","@eigenlayer-middleware/=lib/eigenlayer-middleware/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","@project/=../../contracts/src/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/src/interfaces/ITaskAVSRegistrarBase.sol":"ITaskAVSRegistrarBase"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol":{"keccak256":"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d","urls":["bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc","dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IAVSRegistrarInternal.sol":{"keccak256":"0x27f7c7331ed16eb569c3e5aa57b0b8f838bf77907963b0973b9f2eec22a70168","urls":["bzz-raw://2f8cdc5a91193a414a7b7a613d061db85be01f9b4fe00d7f7f75d2e382e688db","dweb:/ipfs/QmdbKj2TXBzEnzisnqDnL4ZQVY7NtSzY8uuASMyZxwS8kp"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/ISocketRegistryV2.sol":{"keccak256":"0xa65012d0670c06815d49c8a64c5d437be4ca566190d444140e481f1299bc2916","urls":["bzz-raw://86f36f5e6ab40639ea28813b515120b82efb5f6b72294a0f85671f0de2f8db53","dweb:/ipfs/QmQc1YG7UHR6TFnxS7rD5wTnVRBKVCHyUqvgFbVX5zUN6d"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/ITaskAVSRegistrarBase.sol":{"keccak256":"0xd349aeca3fe4906b3adc1bab00fcf7d38cd359e14e9032b374540952ef692990","urls":["bzz-raw://8e537b35544eb61ddf83cd251cc164e4a4544650cdf3aa7bbc76827eeae7905d","dweb:/ipfs/QmbyYhVH5gLEe8eYw1LMK7D97uuT928zhq12HMcmzNTev6"],"license":"BUSL-1.1"}},"version":1},"id":36}