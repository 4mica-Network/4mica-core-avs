{"abi":[{"type":"function","name":"allocationManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAllocationManager"}],"stateMutability":"view"},{"type":"function","name":"deregisterOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","internalType":"uint32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAVS","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"keyRegistrar","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IKeyRegistrar"}],"stateMutability":"view"},{"type":"function","name":"registerOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","internalType":"uint32[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsAVS","inputs":[{"name":"avs","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"OperatorDeregistered","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","indexed":false,"internalType":"uint32[]"}],"anonymous":false},{"type":"event","name":"OperatorRegistered","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","indexed":false,"internalType":"uint32[]"}],"anonymous":false},{"type":"error","name":"KeyNotRegistered","inputs":[]},{"type":"error","name":"NotAllocationManager","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allocationManager()":"ca8aa7c7","deregisterOperator(address,address,uint32[])":"303ca956","getAVS()":"f62b9a54","keyRegistrar()":"3ec45c7e","registerOperator(address,address,uint32[],bytes)":"c63fd502","supportsAVS(address)":"b5265787"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"KeyNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllocationManager\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAVS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keyRegistrar\",\"outputs\":[{\"internalType\":\"contract IKeyRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"supportsAVS\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deregisterOperator(address,address,uint32[])\":{\"params\":{\"avs\":\"the AVS the operator is deregistering from. This should be the same as IAVSRegistrar.avs()\",\"operator\":\"the deregistering operator\",\"operatorSetIds\":\"the list of operator set ids being deregistered from\"}},\"registerOperator(address,address,uint32[],bytes)\":{\"params\":{\"avs\":\"the AVS the operator is registering for. This should be the same as IAVSRegistrar.avs()\",\"data\":\"arbitrary data the operator can provide as part of registration\",\"operator\":\"the registering operator\",\"operatorSetIds\":\"the list of operator set ids being registered for\"}},\"supportsAVS(address)\":{\"params\":{\"avs\":\"the AVS to check\"},\"returns\":{\"_0\":\"true if the AVS is supported, false otherwise\"}}},\"stateVariables\":{\"__GAP\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"avs\":{\"details\":\"In practice, the AVS address in EigenLayer core is address that initialized the Metadata URI.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"KeyNotRegistered()\":[{\"notice\":\"Thrown when a key is not registered\"}],\"NotAllocationManager()\":[{\"notice\":\"Thrown when the caller is not the allocation manager\"}]},\"events\":{\"OperatorDeregistered(address,uint32[])\":{\"notice\":\"Emitted when an operator is deregistered\"},\"OperatorRegistered(address,uint32[])\":{\"notice\":\"Emitted when a new operator is registered\"}},\"kind\":\"user\",\"methods\":{\"allocationManager()\":{\"notice\":\"The allocation manager in EigenLayer core\"},\"deregisterOperator(address,address,uint32[])\":{\"notice\":\"Called by the AllocationManager when an operator is deregistered from one or more operator sets. If this method reverts, it is ignored.\"},\"getAVS()\":{\"notice\":\"Returns the address of the AVS in EigenLayer core\"},\"keyRegistrar()\":{\"notice\":\"Pointer to the EigenLayer core Key Registrar\"},\"registerOperator(address,address,uint32[],bytes)\":{\"notice\":\"Called by the AllocationManager when an operator wants to register for one or more operator sets. This method should revert if registration is unsuccessful.\"},\"supportsAVS(address)\":{\"notice\":\"Returns true if the AVS is supported by the registrar\"}},\"notice\":\"A minimal storage contract for the AVSRegistrar\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/middlewareV2/registrar/AVSRegistrarStorage.sol\":\"AVSRegistrarStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":@project/=../../contracts/src/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0xc0d272c84e3c67c6398f73cb3676ba752d17d5db12cbd831a6ffaed1851b6343\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b445b5ea97ca59cf7d10f48b50ee36b3af6588a8f5ed3960f6e55d70e8a0d651\",\"dweb:/ipfs/QmUpmdkpqL8swHauqvoowfLN5xePtRNfefeFeBogFbQV5R\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c\",\"dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e\",\"dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add\",\"dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/eigenlayer-middleware/src/interfaces/IAVSRegistrarInternal.sol\":{\"keccak256\":\"0x27f7c7331ed16eb569c3e5aa57b0b8f838bf77907963b0973b9f2eec22a70168\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2f8cdc5a91193a414a7b7a613d061db85be01f9b4fe00d7f7f75d2e382e688db\",\"dweb:/ipfs/QmdbKj2TXBzEnzisnqDnL4ZQVY7NtSzY8uuASMyZxwS8kp\"]},\"lib/eigenlayer-middleware/src/middlewareV2/registrar/AVSRegistrarStorage.sol\":{\"keccak256\":\"0x65b0ac645ce5e73e4d36de5c1c82ef17af067abc9ce5d7923efbf6e4d7447258\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fd07b1dd52aee14cb223bc3c4d349b4c8485b86b16839696806c17afde1baef9\",\"dweb:/ipfs/Qme1XEghBmg38cjfGvKRmUdjHChhk75Z5SN1NZPzDphr6S\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"KeyNotRegistered"},{"inputs":[],"type":"error","name":"NotAllocationManager"},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]","indexed":false}],"type":"event","name":"OperatorDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]","indexed":false}],"type":"event","name":"OperatorRegistered","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"allocationManager","outputs":[{"internalType":"contract IAllocationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[],"stateMutability":"view","type":"function","name":"getAVS","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"keyRegistrar","outputs":[{"internalType":"contract IKeyRegistrar","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerOperator"},{"inputs":[{"internalType":"address","name":"avs","type":"address"}],"stateMutability":"view","type":"function","name":"supportsAVS","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"deregisterOperator(address,address,uint32[])":{"params":{"avs":"the AVS the operator is deregistering from. This should be the same as IAVSRegistrar.avs()","operator":"the deregistering operator","operatorSetIds":"the list of operator set ids being deregistered from"}},"registerOperator(address,address,uint32[],bytes)":{"params":{"avs":"the AVS the operator is registering for. This should be the same as IAVSRegistrar.avs()","data":"arbitrary data the operator can provide as part of registration","operator":"the registering operator","operatorSetIds":"the list of operator set ids being registered for"}},"supportsAVS(address)":{"params":{"avs":"the AVS to check"},"returns":{"_0":"true if the AVS is supported, false otherwise"}}},"version":1},"userdoc":{"kind":"user","methods":{"allocationManager()":{"notice":"The allocation manager in EigenLayer core"},"deregisterOperator(address,address,uint32[])":{"notice":"Called by the AllocationManager when an operator is deregistered from one or more operator sets. If this method reverts, it is ignored."},"getAVS()":{"notice":"Returns the address of the AVS in EigenLayer core"},"keyRegistrar()":{"notice":"Pointer to the EigenLayer core Key Registrar"},"registerOperator(address,address,uint32[],bytes)":{"notice":"Called by the AllocationManager when an operator wants to register for one or more operator sets. This method should revert if registration is unsuccessful."},"supportsAVS(address)":{"notice":"Returns true if the AVS is supported by the registrar"}},"version":1}},"settings":{"remappings":["@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","@eigenlayer-middleware/=lib/eigenlayer-middleware/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","@project/=../../contracts/src/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/src/middlewareV2/registrar/AVSRegistrarStorage.sol":"AVSRegistrarStorage"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol":{"keccak256":"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d","urls":["bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc","dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol":{"keccak256":"0xc0d272c84e3c67c6398f73cb3676ba752d17d5db12cbd831a6ffaed1851b6343","urls":["bzz-raw://b445b5ea97ca59cf7d10f48b50ee36b3af6588a8f5ed3960f6e55d70e8a0d651","dweb:/ipfs/QmUpmdkpqL8swHauqvoowfLN5xePtRNfefeFeBogFbQV5R"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol":{"keccak256":"0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8","urls":["bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c","dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc","urls":["bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72","dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol":{"keccak256":"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791","urls":["bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e","dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5","urls":["bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e","dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol":{"keccak256":"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc","urls":["bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc","dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812","urls":["bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41","dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol":{"keccak256":"0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469","urls":["bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add","dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b","urls":["bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c","dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"],"license":"MIT"},"lib/eigenlayer-middleware/src/interfaces/IAVSRegistrarInternal.sol":{"keccak256":"0x27f7c7331ed16eb569c3e5aa57b0b8f838bf77907963b0973b9f2eec22a70168","urls":["bzz-raw://2f8cdc5a91193a414a7b7a613d061db85be01f9b4fe00d7f7f75d2e382e688db","dweb:/ipfs/QmdbKj2TXBzEnzisnqDnL4ZQVY7NtSzY8uuASMyZxwS8kp"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/middlewareV2/registrar/AVSRegistrarStorage.sol":{"keccak256":"0x65b0ac645ce5e73e4d36de5c1c82ef17af067abc9ce5d7923efbf6e4d7447258","urls":["bzz-raw://fd07b1dd52aee14cb223bc3c4d349b4c8485b86b16839696806c17afde1baef9","dweb:/ipfs/Qme1XEghBmg38cjfGvKRmUdjHChhk75Z5SN1NZPzDphr6S"],"license":"BUSL-1.1"}},"version":1},"id":38}