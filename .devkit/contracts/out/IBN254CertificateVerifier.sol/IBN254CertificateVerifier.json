{"abi":[{"type":"function","name":"getNonsignerOperatorInfo","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"},{"name":"operatorIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","components":[{"name":"pubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"weights","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"view"},{"type":"function","name":"getOperatorCount","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getOperatorSetInfo","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo","components":[{"name":"operatorInfoTreeRoot","type":"bytes32","internalType":"bytes32"},{"name":"numOperators","type":"uint256","internalType":"uint256"},{"name":"aggregatePubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"totalWeights","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"view"},{"type":"function","name":"getOperatorSetOwner","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeWeights","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"isNonsignerCached","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"},{"name":"operatorIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isReferenceTimestampSet","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"latestReferenceTimestamp","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"maxOperatorTableStaleness","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"trySignatureVerification","inputs":[{"name":"msgHash","type":"bytes32","internalType":"bytes32"},{"name":"aggPubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"apkG2","type":"tuple","internalType":"struct BN254.G2Point","components":[{"name":"X","type":"uint256[2]","internalType":"uint256[2]"},{"name":"Y","type":"uint256[2]","internalType":"uint256[2]"}]},{"name":"signature","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"pairingSuccessful","type":"bool","internalType":"bool"},{"name":"signatureValid","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"updateOperatorTable","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"},{"name":"operatorSetInfo","type":"tuple","internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo","components":[{"name":"operatorInfoTreeRoot","type":"bytes32","internalType":"bytes32"},{"name":"numOperators","type":"uint256","internalType":"uint256"},{"name":"aggregatePubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"totalWeights","type":"uint256[]","internalType":"uint256[]"}]},{"name":"operatorSetConfig","type":"tuple","internalType":"struct ICrossChainRegistryTypes.OperatorSetConfig","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"maxStalenessPeriod","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifyCertificate","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"cert","type":"tuple","internalType":"struct IBN254CertificateVerifierTypes.BN254Certificate","components":[{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"},{"name":"messageHash","type":"bytes32","internalType":"bytes32"},{"name":"signature","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"apk","type":"tuple","internalType":"struct BN254.G2Point","components":[{"name":"X","type":"uint256[2]","internalType":"uint256[2]"},{"name":"Y","type":"uint256[2]","internalType":"uint256[2]"}]},{"name":"nonSignerWitnesses","type":"tuple[]","internalType":"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]","components":[{"name":"operatorIndex","type":"uint32","internalType":"uint32"},{"name":"operatorInfoProof","type":"bytes","internalType":"bytes"},{"name":"operatorInfo","type":"tuple","internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","components":[{"name":"pubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"weights","type":"uint256[]","internalType":"uint256[]"}]}]}]}],"outputs":[{"name":"signedStakes","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyCertificateNominal","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"cert","type":"tuple","internalType":"struct IBN254CertificateVerifierTypes.BN254Certificate","components":[{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"},{"name":"messageHash","type":"bytes32","internalType":"bytes32"},{"name":"signature","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"apk","type":"tuple","internalType":"struct BN254.G2Point","components":[{"name":"X","type":"uint256[2]","internalType":"uint256[2]"},{"name":"Y","type":"uint256[2]","internalType":"uint256[2]"}]},{"name":"nonSignerWitnesses","type":"tuple[]","internalType":"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]","components":[{"name":"operatorIndex","type":"uint32","internalType":"uint32"},{"name":"operatorInfoProof","type":"bytes","internalType":"bytes"},{"name":"operatorInfo","type":"tuple","internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","components":[{"name":"pubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"weights","type":"uint256[]","internalType":"uint256[]"}]}]}]},{"name":"totalStakeNominalThresholds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyCertificateProportion","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"cert","type":"tuple","internalType":"struct IBN254CertificateVerifierTypes.BN254Certificate","components":[{"name":"referenceTimestamp","type":"uint32","internalType":"uint32"},{"name":"messageHash","type":"bytes32","internalType":"bytes32"},{"name":"signature","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"apk","type":"tuple","internalType":"struct BN254.G2Point","components":[{"name":"X","type":"uint256[2]","internalType":"uint256[2]"},{"name":"Y","type":"uint256[2]","internalType":"uint256[2]"}]},{"name":"nonSignerWitnesses","type":"tuple[]","internalType":"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]","components":[{"name":"operatorIndex","type":"uint32","internalType":"uint32"},{"name":"operatorInfoProof","type":"bytes","internalType":"bytes"},{"name":"operatorInfo","type":"tuple","internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","components":[{"name":"pubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"weights","type":"uint256[]","internalType":"uint256[]"}]}]}]},{"name":"totalStakeProportionThresholds","type":"uint16[]","internalType":"uint16[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"MaxStalenessPeriodUpdated","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"maxStalenessPeriod","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"OperatorSetOwnerUpdated","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"owner","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TableUpdated","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"referenceTimestamp","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"operatorSetInfo","type":"tuple","indexed":false,"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo","components":[{"name":"operatorInfoTreeRoot","type":"bytes32","internalType":"bytes32"},{"name":"numOperators","type":"uint256","internalType":"uint256"},{"name":"aggregatePubkey","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"totalWeights","type":"uint256[]","internalType":"uint256[]"}]}],"anonymous":false},{"type":"error","name":"ArrayLengthMismatch","inputs":[]},{"type":"error","name":"CertificateStale","inputs":[]},{"type":"error","name":"InvalidOperatorIndex","inputs":[]},{"type":"error","name":"OnlyTableUpdater","inputs":[]},{"type":"error","name":"ReferenceTimestampDoesNotExist","inputs":[]},{"type":"error","name":"RootDisabled","inputs":[]},{"type":"error","name":"TableUpdateStale","inputs":[]},{"type":"error","name":"VerificationFailed","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getNonsignerOperatorInfo((address,uint32),uint32,uint256)":"26af6a3c","getOperatorCount((address,uint32),uint32)":"23c2a3cb","getOperatorSetInfo((address,uint32),uint32)":"eb39e68f","getOperatorSetOwner((address,uint32))":"84818920","getTotalStakeWeights((address,uint32),uint32)":"7d1d1f5b","isNonsignerCached((address,uint32),uint32,uint256)":"5be87274","isReferenceTimestampSet((address,uint32),uint32)":"cd83a72b","latestReferenceTimestamp((address,uint32))":"5ddb9b5b","maxOperatorTableStaleness((address,uint32))":"6141879e","trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))":"1a18746c","updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))":"6738c40b","verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))":"080b7150","verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])":"dd2ae1b9","verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])":"017d7974"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CertificateStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTableUpdater\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferenceTimestampDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TableUpdateStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerificationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"name\":\"MaxStalenessPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OperatorSetOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"operatorSetInfo\",\"type\":\"tuple\"}],\"name\":\"TableUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"operatorIndex\",\"type\":\"uint256\"}],\"name\":\"getNonsignerOperatorInfo\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getOperatorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getOperatorSetInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"getTotalStakeWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"operatorIndex\",\"type\":\"uint256\"}],\"name\":\"isNonsignerCached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"}],\"name\":\"isReferenceTimestampSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"latestReferenceTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"maxOperatorTableStaleness\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggPubkey\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apkG2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"trySignatureVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pairingSuccessful\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signatureValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorInfoTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numOperators\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"aggregatePubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalWeights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo\",\"name\":\"operatorSetInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"maxStalenessPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct ICrossChainRegistryTypes.OperatorSetConfig\",\"name\":\"operatorSetConfig\",\"type\":\"tuple\"}],\"name\":\"updateOperatorTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"cert\",\"type\":\"tuple\"}],\"name\":\"verifyCertificate\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"signedStakes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"cert\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"totalStakeNominalThresholds\",\"type\":\"uint256[]\"}],\"name\":\"verifyCertificateNominal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"referenceTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"apk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"operatorInfoProof\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"pubkey\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IOperatorTableCalculatorTypes.BN254OperatorInfo\",\"name\":\"operatorInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]\",\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBN254CertificateVerifierTypes.BN254Certificate\",\"name\":\"cert\",\"type\":\"tuple\"},{\"internalType\":\"uint16[]\",\"name\":\"totalStakeProportionThresholds\",\"type\":\"uint16[]\"}],\"name\":\"verifyCertificateProportion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonsignerOperatorInfo((address,uint32),uint32,uint256)\":{\"details\":\"The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`\",\"params\":{\"operatorIndex\":\"The operator index\",\"operatorSet\":\"The operatorSet\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The cached operator info, empty if the operator is not in the cache\"}},\"getOperatorCount((address,uint32),uint32)\":{\"details\":\"Returns 0 if the reference timestamp is not set or the number of operators is 0\",\"params\":{\"operatorSet\":\"The operator set to get the number of operators for\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The number of operators\"}},\"getOperatorSetInfo((address,uint32),uint32)\":{\"params\":{\"operatorSet\":\"The operator set\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The operator set info, empty if the operatorSet has not been updated for the given reference timestamp\"}},\"getOperatorSetOwner((address,uint32))\":{\"details\":\"The owner of the OperatorSet is not used by this contract, but can be used by periphery contracts      to gate access control for on-chain operations\",\"params\":{\"operatorSet\":\"The operatorSet to get the owner of\"},\"returns\":{\"_0\":\"The owner\"}},\"getTotalStakeWeights((address,uint32),uint32)\":{\"details\":\"For ECDSA, this function *reverts* if the reference timestamp is not set or the number of operators is 0For BN254, this function returns empty array if the reference timestamp is not set or the number of operators is 0\",\"params\":{\"operatorSet\":\"The operator set to calculate stakes for\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"The sum of stake weights for each stake type, empty if the operatorSet has not been updated for the given reference timestamp\"}},\"isNonsignerCached((address,uint32),uint32,uint256)\":{\"details\":\"The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`\",\"params\":{\"operatorIndex\":\"The operator index\",\"operatorSet\":\"The operator set\",\"referenceTimestamp\":\"The reference timestamp\"},\"returns\":{\"_0\":\"Whether the operator is cached\"}},\"isReferenceTimestampSet((address,uint32),uint32)\":{\"details\":\"The reference timestamp is set when the operator table is updated\",\"params\":{\"operatorSet\":\"The operatorSet to check\",\"referenceTimestamp\":\"The reference timestamp to check\"},\"returns\":{\"_0\":\"Whether the reference timestamp has been updated\"}},\"latestReferenceTimestamp((address,uint32))\":{\"details\":\"The latest reference timestamp is set when the operator table is updated\",\"params\":{\"operatorSet\":\"The operatorSet to get the latest reference timestamp of\"},\"returns\":{\"_0\":\"The latest reference timestamp, 0 if the operatorSet has never been updated\"}},\"maxOperatorTableStaleness((address,uint32))\":{\"details\":\"A staleness period of 0 allows for certificates to be verified against any timestamp in the pastStaleness periods should not be greater than 0 and less than the update cadence of the `OperatorTables`, since      certificates would be unable to be validated against\",\"params\":{\"operatorSet\":\"The operatorSet to get the max staleness period of\"},\"returns\":{\"_0\":\"The max staleness period\"}},\"trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"params\":{\"aggPubkey\":\"The aggregate public key of signers\",\"apkG2\":\"The G2 point representation of the aggregate public key\",\"msgHash\":\"The message hash that was signed\",\"signature\":\"The BLS signature to verify\"},\"returns\":{\"pairingSuccessful\":\"Whether the pairing operation completed successfully\",\"signatureValid\":\"Whether the signature is valid\"}},\"updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"details\":\"Only callable by the `OperatorTableUpdater`The `referenceTimestamp` must correspond to a reference timestamp for a globalTableRoot stored in the `OperatorTableUpdater`The `referenceTimestamp` must be greater than the latest reference timestamp for the given operatorSet\",\"params\":{\"operatorSet\":\"the operatorSet to update the operator table for\",\"operatorSetConfig\":\"the configuration of the operatorSet, which includes the owner and max staleness period\",\"operatorSetInfo\":\"the operatorInfos to update the operator table with\",\"referenceTimestamp\":\"the timestamp at which the operatorInfos were sourced via the `globalTableRoot`\"}},\"verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))\":{\"params\":{\"cert\":\"a certificate\",\"operatorSet\":\"the operatorSet that the certificate is for\"},\"returns\":{\"signedStakes\":\"array of stake weights that signed the certificate for each stake type. Each index         corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`.\"}},\"verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])\":{\"params\":{\"cert\":\"the certificate\",\"operatorSet\":\"the operatorSet that the certificate is for\",\"totalStakeNominalThresholds\":\"the nominal amount of stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`\"},\"returns\":{\"_0\":\"Whether or not certificate is valid and meets nominal thresholds\"}},\"verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])\":{\"params\":{\"cert\":\"the certificate\",\"operatorSet\":\"the operatorSet that the certificate is for\",\"totalStakeProportionThresholds\":\"the proportion, in BPS, of total stake weight that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`\"},\"returns\":{\"_0\":\"whether or not certificate is valid and meets proportion thresholds\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ArrayLengthMismatch()\":[{\"notice\":\"Thrown when array lengths mismatch\"}],\"CertificateStale()\":[{\"notice\":\"Thrown when the certificate is too stale, per the max staleness period of the operatorSet\"}],\"InvalidOperatorIndex()\":[{\"notice\":\"thrown when operator index provided in certificate is invalid\"}],\"OnlyTableUpdater()\":[{\"notice\":\"Thrown when the table updater is not caller\"}],\"ReferenceTimestampDoesNotExist()\":[{\"notice\":\"Thrown when the reference timestamp does not exist\"}],\"RootDisabled()\":[{\"notice\":\"Thrown when the global table root is disabled\"}],\"TableUpdateStale()\":[{\"notice\":\"Thrown when the table update is stale\"}],\"VerificationFailed()\":[{\"notice\":\"Thrown when certificate verification fails\"}]},\"events\":{\"MaxStalenessPeriodUpdated((address,uint32),uint32)\":{\"notice\":\"Emitted when the max staleness period of an operatorSet is updated\"},\"OperatorSetOwnerUpdated((address,uint32),address)\":{\"notice\":\"Emitted when the owner of an operatorSet is updated\"},\"TableUpdated((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]))\":{\"notice\":\"Emitted when an BN254 table is updated\"}},\"kind\":\"user\",\"methods\":{\"getNonsignerOperatorInfo((address,uint32),uint32,uint256)\":{\"notice\":\"Get cached nonsigner operator info\"},\"getOperatorCount((address,uint32),uint32)\":{\"notice\":\"Get the number of operators at a given reference timestamp\"},\"getOperatorSetInfo((address,uint32),uint32)\":{\"notice\":\"Get operator set info for a timestamp\"},\"getOperatorSetOwner((address,uint32))\":{\"notice\":\"The address of the owner of the OperatorSet\"},\"getTotalStakeWeights((address,uint32),uint32)\":{\"notice\":\"Get the total stake weights for all operators at a given reference timestamp\"},\"isNonsignerCached((address,uint32),uint32,uint256)\":{\"notice\":\"Check if a nonsigner is cached\"},\"isReferenceTimestampSet((address,uint32),uint32)\":{\"notice\":\"Whether the operator table has been updated for a given reference timestamp\"},\"latestReferenceTimestamp((address,uint32))\":{\"notice\":\"The latest reference timestamp of the operator table for a given operatorSet. This value is         updated each time an operator table is updated\"},\"maxOperatorTableStaleness((address,uint32))\":{\"notice\":\"The max staleness period of the operator table for a given operatorSet. This value is AVS-set and         transported by the multichain protocol\"},\"trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))\":{\"notice\":\"Convenience function to attempt signature verification with gas limit for safety\"},\"updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))\":{\"notice\":\"updates the operator table with stake weights for an operatorSet\"},\"verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))\":{\"notice\":\"verifies a certificate\"},\"verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])\":{\"notice\":\"verifies a certificate and makes sure that the signed stakes meet provided nominal stake thresholds\"},\"verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])\":{\"notice\":\"verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake weight on the AVS\"}},\"notice\":\"An interface for verifying BN254 certificatesThis implements the base `IBaseCertificateVerifier` interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBN254CertificateVerifier.sol\":\"IBN254CertificateVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":@project/=../../contracts/src/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBN254CertificateVerifier.sol\":{\"keccak256\":\"0x7752b30f86aa336ef2fe520e4a44077c3ea8c7eab0e2d10ce72c7418447f11b4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a930bb2a3c66072b5387e1645a0bad9b867a6d0b4251a070cb32f2194d9dd63d\",\"dweb:/ipfs/Qmdpwp4j19P2WkmtYUTFj5GveCm35zHjfEU81zJqwJpmYr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBaseCertificateVerifier.sol\":{\"keccak256\":\"0x73868ac5e03f51617288695fe3e78dbd9595f7131b4db32419ada6941e12711f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c94787fdcc69a43642d0b72c006994aae6dd26e0fcde7cfc175a44d8303b7565\",\"dweb:/ipfs/QmQeaQWds1kSCymh6HYPKBjFMfSDfHUCZREC6khbbNyLA4\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ICrossChainRegistry.sol\":{\"keccak256\":\"0x0b14b4dec4978bd42a8a1483b430854a773f8cbbe09981833055fe260dd04750\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://42828bc630691170efa41caceecf8146f81f1b400cd3fbe2a49a1ab791a722d5\",\"dweb:/ipfs/QmaW3Hey61bXYLwFnBpRPATJqfKZKvZgzZyRtqkaKCGw51\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IOperatorTableCalculator.sol\":{\"keccak256\":\"0xaf9b4bd05cbd4fbd5c466c50ed00f3a11d2f549449a3f247a82595497c39451b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1a15978f7d282beea242a4e9771df4b5f8e2af4b38eaf04e3ab02510cafa51e\",\"dweb:/ipfs/QmVjaydhAzDgeJ1rxakWLoqo9WpGfVh7ajmFYsQZBrPQ16\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ArrayLengthMismatch"},{"inputs":[],"type":"error","name":"CertificateStale"},{"inputs":[],"type":"error","name":"InvalidOperatorIndex"},{"inputs":[],"type":"error","name":"OnlyTableUpdater"},{"inputs":[],"type":"error","name":"ReferenceTimestampDoesNotExist"},{"inputs":[],"type":"error","name":"RootDisabled"},{"inputs":[],"type":"error","name":"TableUpdateStale"},{"inputs":[],"type":"error","name":"VerificationFailed"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"uint32","name":"maxStalenessPeriod","type":"uint32","indexed":false}],"type":"event","name":"MaxStalenessPeriodUpdated","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"address","name":"owner","type":"address","indexed":false}],"type":"event","name":"OperatorSetOwnerUpdated","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32","indexed":false},{"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo","name":"operatorSetInfo","type":"tuple","components":[{"internalType":"bytes32","name":"operatorInfoTreeRoot","type":"bytes32"},{"internalType":"uint256","name":"numOperators","type":"uint256"},{"internalType":"struct BN254.G1Point","name":"aggregatePubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"uint256[]","name":"totalWeights","type":"uint256[]"}],"indexed":false}],"type":"event","name":"TableUpdated","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"},{"internalType":"uint256","name":"operatorIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"getNonsignerOperatorInfo","outputs":[{"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","name":"","type":"tuple","components":[{"internalType":"struct BN254.G1Point","name":"pubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"uint256[]","name":"weights","type":"uint256[]"}]}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"}],"stateMutability":"view","type":"function","name":"getOperatorCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"}],"stateMutability":"view","type":"function","name":"getOperatorSetInfo","outputs":[{"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"operatorInfoTreeRoot","type":"bytes32"},{"internalType":"uint256","name":"numOperators","type":"uint256"},{"internalType":"struct BN254.G1Point","name":"aggregatePubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"uint256[]","name":"totalWeights","type":"uint256[]"}]}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"getOperatorSetOwner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"}],"stateMutability":"view","type":"function","name":"getTotalStakeWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"},{"internalType":"uint256","name":"operatorIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"isNonsignerCached","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"}],"stateMutability":"view","type":"function","name":"isReferenceTimestampSet","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"latestReferenceTimestamp","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"maxOperatorTableStaleness","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"bytes32","name":"msgHash","type":"bytes32"},{"internalType":"struct BN254.G1Point","name":"aggPubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"struct BN254.G2Point","name":"apkG2","type":"tuple","components":[{"internalType":"uint256[2]","name":"X","type":"uint256[2]"},{"internalType":"uint256[2]","name":"Y","type":"uint256[2]"}]},{"internalType":"struct BN254.G1Point","name":"signature","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]}],"stateMutability":"view","type":"function","name":"trySignatureVerification","outputs":[{"internalType":"bool","name":"pairingSuccessful","type":"bool"},{"internalType":"bool","name":"signatureValid","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"},{"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorSetInfo","name":"operatorSetInfo","type":"tuple","components":[{"internalType":"bytes32","name":"operatorInfoTreeRoot","type":"bytes32"},{"internalType":"uint256","name":"numOperators","type":"uint256"},{"internalType":"struct BN254.G1Point","name":"aggregatePubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"uint256[]","name":"totalWeights","type":"uint256[]"}]},{"internalType":"struct ICrossChainRegistryTypes.OperatorSetConfig","name":"operatorSetConfig","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"maxStalenessPeriod","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorTable"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"struct IBN254CertificateVerifierTypes.BN254Certificate","name":"cert","type":"tuple","components":[{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"},{"internalType":"bytes32","name":"messageHash","type":"bytes32"},{"internalType":"struct BN254.G1Point","name":"signature","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"struct BN254.G2Point","name":"apk","type":"tuple","components":[{"internalType":"uint256[2]","name":"X","type":"uint256[2]"},{"internalType":"uint256[2]","name":"Y","type":"uint256[2]"}]},{"internalType":"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]","name":"nonSignerWitnesses","type":"tuple[]","components":[{"internalType":"uint32","name":"operatorIndex","type":"uint32"},{"internalType":"bytes","name":"operatorInfoProof","type":"bytes"},{"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","name":"operatorInfo","type":"tuple","components":[{"internalType":"struct BN254.G1Point","name":"pubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"uint256[]","name":"weights","type":"uint256[]"}]}]}]}],"stateMutability":"nonpayable","type":"function","name":"verifyCertificate","outputs":[{"internalType":"uint256[]","name":"signedStakes","type":"uint256[]"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"struct IBN254CertificateVerifierTypes.BN254Certificate","name":"cert","type":"tuple","components":[{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"},{"internalType":"bytes32","name":"messageHash","type":"bytes32"},{"internalType":"struct BN254.G1Point","name":"signature","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"struct BN254.G2Point","name":"apk","type":"tuple","components":[{"internalType":"uint256[2]","name":"X","type":"uint256[2]"},{"internalType":"uint256[2]","name":"Y","type":"uint256[2]"}]},{"internalType":"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]","name":"nonSignerWitnesses","type":"tuple[]","components":[{"internalType":"uint32","name":"operatorIndex","type":"uint32"},{"internalType":"bytes","name":"operatorInfoProof","type":"bytes"},{"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","name":"operatorInfo","type":"tuple","components":[{"internalType":"struct BN254.G1Point","name":"pubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"uint256[]","name":"weights","type":"uint256[]"}]}]}]},{"internalType":"uint256[]","name":"totalStakeNominalThresholds","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"verifyCertificateNominal","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"struct IBN254CertificateVerifierTypes.BN254Certificate","name":"cert","type":"tuple","components":[{"internalType":"uint32","name":"referenceTimestamp","type":"uint32"},{"internalType":"bytes32","name":"messageHash","type":"bytes32"},{"internalType":"struct BN254.G1Point","name":"signature","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"struct BN254.G2Point","name":"apk","type":"tuple","components":[{"internalType":"uint256[2]","name":"X","type":"uint256[2]"},{"internalType":"uint256[2]","name":"Y","type":"uint256[2]"}]},{"internalType":"struct IBN254CertificateVerifierTypes.BN254OperatorInfoWitness[]","name":"nonSignerWitnesses","type":"tuple[]","components":[{"internalType":"uint32","name":"operatorIndex","type":"uint32"},{"internalType":"bytes","name":"operatorInfoProof","type":"bytes"},{"internalType":"struct IOperatorTableCalculatorTypes.BN254OperatorInfo","name":"operatorInfo","type":"tuple","components":[{"internalType":"struct BN254.G1Point","name":"pubkey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"uint256[]","name":"weights","type":"uint256[]"}]}]}]},{"internalType":"uint16[]","name":"totalStakeProportionThresholds","type":"uint16[]"}],"stateMutability":"nonpayable","type":"function","name":"verifyCertificateProportion","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"getNonsignerOperatorInfo((address,uint32),uint32,uint256)":{"details":"The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`","params":{"operatorIndex":"The operator index","operatorSet":"The operatorSet","referenceTimestamp":"The reference timestamp"},"returns":{"_0":"The cached operator info, empty if the operator is not in the cache"}},"getOperatorCount((address,uint32),uint32)":{"details":"Returns 0 if the reference timestamp is not set or the number of operators is 0","params":{"operatorSet":"The operator set to get the number of operators for","referenceTimestamp":"The reference timestamp"},"returns":{"_0":"The number of operators"}},"getOperatorSetInfo((address,uint32),uint32)":{"params":{"operatorSet":"The operator set","referenceTimestamp":"The reference timestamp"},"returns":{"_0":"The operator set info, empty if the operatorSet has not been updated for the given reference timestamp"}},"getOperatorSetOwner((address,uint32))":{"details":"The owner of the OperatorSet is not used by this contract, but can be used by periphery contracts      to gate access control for on-chain operations","params":{"operatorSet":"The operatorSet to get the owner of"},"returns":{"_0":"The owner"}},"getTotalStakeWeights((address,uint32),uint32)":{"details":"For ECDSA, this function *reverts* if the reference timestamp is not set or the number of operators is 0For BN254, this function returns empty array if the reference timestamp is not set or the number of operators is 0","params":{"operatorSet":"The operator set to calculate stakes for","referenceTimestamp":"The reference timestamp"},"returns":{"_0":"The sum of stake weights for each stake type, empty if the operatorSet has not been updated for the given reference timestamp"}},"isNonsignerCached((address,uint32),uint32,uint256)":{"details":"The non-signing operatorInfo is stored upon a successful certificate verification. Once cached,      non-signer proofs do not need to be passed in as part of the `BN254Certificate`","params":{"operatorIndex":"The operator index","operatorSet":"The operator set","referenceTimestamp":"The reference timestamp"},"returns":{"_0":"Whether the operator is cached"}},"isReferenceTimestampSet((address,uint32),uint32)":{"details":"The reference timestamp is set when the operator table is updated","params":{"operatorSet":"The operatorSet to check","referenceTimestamp":"The reference timestamp to check"},"returns":{"_0":"Whether the reference timestamp has been updated"}},"latestReferenceTimestamp((address,uint32))":{"details":"The latest reference timestamp is set when the operator table is updated","params":{"operatorSet":"The operatorSet to get the latest reference timestamp of"},"returns":{"_0":"The latest reference timestamp, 0 if the operatorSet has never been updated"}},"maxOperatorTableStaleness((address,uint32))":{"details":"A staleness period of 0 allows for certificates to be verified against any timestamp in the pastStaleness periods should not be greater than 0 and less than the update cadence of the `OperatorTables`, since      certificates would be unable to be validated against","params":{"operatorSet":"The operatorSet to get the max staleness period of"},"returns":{"_0":"The max staleness period"}},"trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))":{"params":{"aggPubkey":"The aggregate public key of signers","apkG2":"The G2 point representation of the aggregate public key","msgHash":"The message hash that was signed","signature":"The BLS signature to verify"},"returns":{"pairingSuccessful":"Whether the pairing operation completed successfully","signatureValid":"Whether the signature is valid"}},"updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))":{"details":"Only callable by the `OperatorTableUpdater`The `referenceTimestamp` must correspond to a reference timestamp for a globalTableRoot stored in the `OperatorTableUpdater`The `referenceTimestamp` must be greater than the latest reference timestamp for the given operatorSet","params":{"operatorSet":"the operatorSet to update the operator table for","operatorSetConfig":"the configuration of the operatorSet, which includes the owner and max staleness period","operatorSetInfo":"the operatorInfos to update the operator table with","referenceTimestamp":"the timestamp at which the operatorInfos were sourced via the `globalTableRoot`"}},"verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))":{"params":{"cert":"a certificate","operatorSet":"the operatorSet that the certificate is for"},"returns":{"signedStakes":"array of stake weights that signed the certificate for each stake type. Each index         corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`."}},"verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])":{"params":{"cert":"the certificate","operatorSet":"the operatorSet that the certificate is for","totalStakeNominalThresholds":"the nominal amount of stake that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`"},"returns":{"_0":"Whether or not certificate is valid and meets nominal thresholds"}},"verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])":{"params":{"cert":"the certificate","operatorSet":"the operatorSet that the certificate is for","totalStakeProportionThresholds":"the proportion, in BPS, of total stake weight that the signed stake of the certificate should meet. Each index corresponds to a stake type in the `totalWeights` array in the `BN254OperatorSetInfo`"},"returns":{"_0":"whether or not certificate is valid and meets proportion thresholds"}}},"version":1},"userdoc":{"kind":"user","methods":{"getNonsignerOperatorInfo((address,uint32),uint32,uint256)":{"notice":"Get cached nonsigner operator info"},"getOperatorCount((address,uint32),uint32)":{"notice":"Get the number of operators at a given reference timestamp"},"getOperatorSetInfo((address,uint32),uint32)":{"notice":"Get operator set info for a timestamp"},"getOperatorSetOwner((address,uint32))":{"notice":"The address of the owner of the OperatorSet"},"getTotalStakeWeights((address,uint32),uint32)":{"notice":"Get the total stake weights for all operators at a given reference timestamp"},"isNonsignerCached((address,uint32),uint32,uint256)":{"notice":"Check if a nonsigner is cached"},"isReferenceTimestampSet((address,uint32),uint32)":{"notice":"Whether the operator table has been updated for a given reference timestamp"},"latestReferenceTimestamp((address,uint32))":{"notice":"The latest reference timestamp of the operator table for a given operatorSet. This value is         updated each time an operator table is updated"},"maxOperatorTableStaleness((address,uint32))":{"notice":"The max staleness period of the operator table for a given operatorSet. This value is AVS-set and         transported by the multichain protocol"},"trySignatureVerification(bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256))":{"notice":"Convenience function to attempt signature verification with gas limit for safety"},"updateOperatorTable((address,uint32),uint32,(bytes32,uint256,(uint256,uint256),uint256[]),(address,uint32))":{"notice":"updates the operator table with stake weights for an operatorSet"},"verifyCertificate((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]))":{"notice":"verifies a certificate"},"verifyCertificateNominal((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint256[])":{"notice":"verifies a certificate and makes sure that the signed stakes meet provided nominal stake thresholds"},"verifyCertificateProportion((address,uint32),(uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),(uint32,bytes,((uint256,uint256),uint256[]))[]),uint16[])":{"notice":"verifies a certificate and makes sure that the signed stakes meet provided portions of the total stake weight on the AVS"}},"version":1}},"settings":{"remappings":["@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","@eigenlayer-middleware/=lib/eigenlayer-middleware/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","@project/=../../contracts/src/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBN254CertificateVerifier.sol":"IBN254CertificateVerifier"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBN254CertificateVerifier.sol":{"keccak256":"0x7752b30f86aa336ef2fe520e4a44077c3ea8c7eab0e2d10ce72c7418447f11b4","urls":["bzz-raw://a930bb2a3c66072b5387e1645a0bad9b867a6d0b4251a070cb32f2194d9dd63d","dweb:/ipfs/Qmdpwp4j19P2WkmtYUTFj5GveCm35zHjfEU81zJqwJpmYr"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IBaseCertificateVerifier.sol":{"keccak256":"0x73868ac5e03f51617288695fe3e78dbd9595f7131b4db32419ada6941e12711f","urls":["bzz-raw://c94787fdcc69a43642d0b72c006994aae6dd26e0fcde7cfc175a44d8303b7565","dweb:/ipfs/QmQeaQWds1kSCymh6HYPKBjFMfSDfHUCZREC6khbbNyLA4"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ICrossChainRegistry.sol":{"keccak256":"0x0b14b4dec4978bd42a8a1483b430854a773f8cbbe09981833055fe260dd04750","urls":["bzz-raw://42828bc630691170efa41caceecf8146f81f1b400cd3fbe2a49a1ab791a722d5","dweb:/ipfs/QmaW3Hey61bXYLwFnBpRPATJqfKZKvZgzZyRtqkaKCGw51"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IOperatorTableCalculator.sol":{"keccak256":"0xaf9b4bd05cbd4fbd5c466c50ed00f3a11d2f549449a3f247a82595497c39451b","urls":["bzz-raw://d1a15978f7d282beea242a4e9771df4b5f8e2af4b38eaf04e3ab02510cafa51e","dweb:/ipfs/QmVjaydhAzDgeJ1rxakWLoqo9WpGfVh7ajmFYsQZBrPQ16"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol":{"keccak256":"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc","urls":["bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc","dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812","urls":["bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41","dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"],"license":"BUSL-1.1"}},"version":1},"id":11}