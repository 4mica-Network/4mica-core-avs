{"abi":[{"type":"function","name":"configureOperatorSet","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"curveType","type":"uint8","internalType":"enum IKeyRegistrarTypes.CurveType"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterKey","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"encodeBN254KeyData","inputs":[{"name":"g1Point","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"g2Point","type":"tuple","internalType":"struct BN254.G2Point","components":[{"name":"X","type":"uint256[2]","internalType":"uint256[2]"},{"name":"Y","type":"uint256[2]","internalType":"uint256[2]"}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"getBN254Key","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"g1Point","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"g2Point","type":"tuple","internalType":"struct BN254.G2Point","components":[{"name":"X","type":"uint256[2]","internalType":"uint256[2]"},{"name":"Y","type":"uint256[2]","internalType":"uint256[2]"}]}],"stateMutability":"view"},{"type":"function","name":"getBN254KeyRegistrationMessageHash","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"keyData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getECDSAAddress","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getECDSAKey","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getECDSAKeyRegistrationMessageHash","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"keyAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getKeyHash","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getOperatorFromSigningKey","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"keyData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getOperatorSetCurveType","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"uint8","internalType":"enum IKeyRegistrarTypes.CurveType"}],"stateMutability":"view"},{"type":"function","name":"isKeyGloballyRegistered","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isRegistered","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerKey","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"pubkey","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"event","name":"AggregateBN254KeyUpdated","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"newAggregateKey","type":"tuple","indexed":false,"internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]}],"anonymous":false},{"type":"event","name":"KeyDeregistered","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"curveType","type":"uint8","indexed":false,"internalType":"enum IKeyRegistrarTypes.CurveType"}],"anonymous":false},{"type":"event","name":"KeyRegistered","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"curveType","type":"uint8","indexed":false,"internalType":"enum IKeyRegistrarTypes.CurveType"},{"name":"pubkey","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"OperatorSetConfigured","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"curveType","type":"uint8","indexed":false,"internalType":"enum IKeyRegistrarTypes.CurveType"}],"anonymous":false},{"type":"error","name":"ConfigurationAlreadySet","inputs":[]},{"type":"error","name":"InvalidCurveType","inputs":[]},{"type":"error","name":"InvalidKeyFormat","inputs":[]},{"type":"error","name":"InvalidKeypair","inputs":[]},{"type":"error","name":"KeyAlreadyRegistered","inputs":[]},{"type":"error","name":"KeyNotFound","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"OperatorSetNotConfigured","inputs":[]},{"type":"error","name":"OperatorStillSlashable","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"error","name":"ZeroPubkey","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"configureOperatorSet((address,uint32),uint8)":"ea0d8149","deregisterKey(address,(address,uint32))":"87ab86f4","encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))":"50435add","getBN254Key((address,uint32),address)":"9a43e3fb","getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)":"7690e395","getECDSAAddress((address,uint32),address)":"3b32a7bd","getECDSAKey((address,uint32),address)":"aa165c30","getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)":"d9f12db2","getKeyHash((address,uint32),address)":"ea194e2e","getOperatorFromSigningKey((address,uint32),bytes)":"8256909c","getOperatorSetCurveType((address,uint32))":"7cffe48c","isKeyGloballyRegistered(bytes32)":"dab42d7e","isRegistered((address,uint32),address)":"bd30a0b9","registerKey(address,(address,uint32),bytes,bytes)":"d40cda16","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ConfigurationAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurveType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeyFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeypair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"KeyNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorSetNotConfigured\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorStillSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPubkey\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BN254.G1Point\",\"name\":\"newAggregateKey\",\"type\":\"tuple\"}],\"name\":\"AggregateBN254KeyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"KeyDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"KeyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"OperatorSetConfigured\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"configureOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"deregisterKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"g1Point\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"g2Point\",\"type\":\"tuple\"}],\"name\":\"encodeBN254KeyData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getBN254Key\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"g1Point\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"g2Point\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"keyData\",\"type\":\"bytes\"}],\"name\":\"getBN254KeyRegistrationMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"keyAddress\",\"type\":\"address\"}],\"name\":\"getECDSAKeyRegistrationMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"keyData\",\"type\":\"bytes\"}],\"name\":\"getOperatorFromSigningKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetCurveType\",\"outputs\":[{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"isKeyGloballyRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"registerKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"configureOperatorSet((address,uint32),uint8)\":{\"details\":\"Only authorized callers for the AVS can configure operator sets\",\"params\":{\"curveType\":\"Type of curve (ECDSA, BN254)\",\"operatorSet\":\"The operator set to configure\"}},\"deregisterKey(address,(address,uint32))\":{\"details\":\"Can be called by the operator directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredReverts if operator is still slashable for the operator set (prevents key rotation while slashable)Keys remain in global key registry to prevent reuse\",\"params\":{\"operator\":\"Address of the operator to deregister key for\",\"operatorSet\":\"The operator set to deregister the key from\"}},\"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))\":{\"params\":{\"g1Point\":\"The BN254 G1 public key\",\"g2Point\":\"The BN254 G2 public key\"},\"returns\":{\"_0\":\"The encoded key data\"}},\"getBN254Key((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured for BN254\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"g1Point\":\"The BN254 G1 public key\",\"g2Point\":\"The BN254 G2 public key\"}},\"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)\":{\"params\":{\"keyData\":\"The BN254 key data\",\"operator\":\"The operator address\",\"operatorSet\":\"The operator set\"},\"returns\":{\"_0\":\"The message hash for signing\"}},\"getECDSAAddress((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured for ECDSA\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key in address format\"}},\"getECDSAKey((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured for ECDSA\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key in bytes format\"}},\"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)\":{\"params\":{\"keyAddress\":\"The address of the key\",\"operator\":\"The operator address\",\"operatorSet\":\"The operator set\"},\"returns\":{\"_0\":\"The message hash for signing\"}},\"getKeyHash((address,uint32),address)\":{\"details\":\"Reverts if the operatorSet is not configured\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key hash for\"},\"returns\":{\"_0\":\"keyHash The key hash\"}},\"getOperatorFromSigningKey((address,uint32),bytes)\":{\"details\":\"This function decodes the key data based on the curve type of the operator setThis function will return the operator address even if the operator is not registered for the operator set\",\"params\":{\"keyData\":\"The key data. For ECDSA, this is the signing key address. For BN254, this can be either the G1 key or the G1 and G2 key combined.\",\"operatorSet\":\"The operator set to get the operator for\"},\"returns\":{\"_0\":\"operator. Returns 0x0 if the key is not registered\",\"_1\":\"status registration status. Returns false if the key is not registered\"}},\"getOperatorSetCurveType((address,uint32))\":{\"params\":{\"operatorSet\":\"The operator set to get the curve type for\"},\"returns\":{\"_0\":\"The curve type, either ECDSA, BN254, or NONE\"}},\"isKeyGloballyRegistered(bytes32)\":{\"params\":{\"keyHash\":\"Hash of the key\"},\"returns\":{\"_0\":\"True if the key is globally registered\"}},\"isRegistered((address,uint32),address)\":{\"details\":\"If the operatorSet is not configured, this function will return false\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to check\"},\"returns\":{\"_0\":\"True if the key is registered, false otherwise\"}},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"details\":\"Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registeredThere exist no restriction on the state of the operator with respect to the operatorSet. That is, an operator      does not have to be registered for the operator in the `AllocationManager` to register a key for it\",\"params\":{\"operator\":\"Address of the operator to register key for\",\"operatorSet\":\"The operator set to register the key for\",\"pubkey\":\"Public key bytes. For ECDSA, this is the address of the key. For BN254, this is the G1 and G2 key combined (see `encodeBN254KeyData`)\",\"signature\":\"Signature proving ownership. For ECDSA this is a signature of the `getECDSAKeyRegistrationMessageHash`. For BN254 this is a signature of the `getBN254KeyRegistrationMessageHash`.\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ConfigurationAlreadySet()\":[{\"notice\":\"Error thrown when the configuration is already set\"}],\"InvalidCurveType()\":[{\"notice\":\"Error thrown when the curve type is invalid\"}],\"InvalidKeyFormat()\":[{\"notice\":\"Error thrown when the key format is invalid\"}],\"InvalidKeypair()\":[{\"notice\":\"Error thrown when the keypair is invalid\"}],\"KeyAlreadyRegistered()\":[{\"notice\":\"Error thrown when a key is already registered\"}],\"KeyNotFound((address,uint32),address)\":[{\"notice\":\"Error thrown when the key is not found\"}],\"OperatorSetNotConfigured()\":[{\"notice\":\"Error thrown when the operator set is not configured\"}],\"OperatorStillSlashable((address,uint32),address)\":[{\"notice\":\"Error thrown when the operator is still slashable when trying to deregister a key\"}],\"ZeroAddress()\":[{\"notice\":\"Error thrown when the address is zero\"}],\"ZeroPubkey()\":[{\"notice\":\"Error thrown when the public key is zero\"}]},\"events\":{\"AggregateBN254KeyUpdated((address,uint32),(uint256,uint256))\":{\"notice\":\"Emitted when the aggregate BN254 key is updated\"},\"KeyDeregistered((address,uint32),address,uint8)\":{\"notice\":\"Emitted when a key is deregistered\"},\"KeyRegistered((address,uint32),address,uint8,bytes)\":{\"notice\":\"Emitted when a key is registered\"},\"OperatorSetConfigured((address,uint32),uint8)\":{\"notice\":\"Emitted when an operator set is configured\"}},\"kind\":\"user\",\"methods\":{\"configureOperatorSet((address,uint32),uint8)\":{\"notice\":\"Configures an operator set with curve type\"},\"deregisterKey(address,(address,uint32))\":{\"notice\":\"Deregisters a cryptographic key for an operator with a specific operator set\"},\"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))\":{\"notice\":\"Encodes the BN254 key data into a bytes array\"},\"getBN254Key((address,uint32),address)\":{\"notice\":\"Gets the BN254 public key for an operator with a specific operator set\"},\"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)\":{\"notice\":\"Returns the message hash for BN254 key registration\"},\"getECDSAAddress((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set\"},\"getECDSAKey((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set as bytes\"},\"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)\":{\"notice\":\"Returns the message hash for ECDSA key registration\"},\"getKeyHash((address,uint32),address)\":{\"notice\":\"Gets the key hash for an operator with a specific operator set\"},\"getOperatorFromSigningKey((address,uint32),bytes)\":{\"notice\":\"Gets the operator from signing key\"},\"getOperatorSetCurveType((address,uint32))\":{\"notice\":\"Gets the curve type for an operator set\"},\"isKeyGloballyRegistered(bytes32)\":{\"notice\":\"Checks if a key hash is globally registered\"},\"isRegistered((address,uint32),address)\":{\"notice\":\"Checks if a key is registered for an operator with a specific operator set\"},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"notice\":\"Registers a cryptographic key for an operator with a specific operator set\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol\":\"IKeyRegistrar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":@project/=../../contracts/src/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c\",\"dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ConfigurationAlreadySet"},{"inputs":[],"type":"error","name":"InvalidCurveType"},{"inputs":[],"type":"error","name":"InvalidKeyFormat"},{"inputs":[],"type":"error","name":"InvalidKeypair"},{"inputs":[],"type":"error","name":"KeyAlreadyRegistered"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"type":"error","name":"KeyNotFound"},{"inputs":[],"type":"error","name":"OperatorSetNotConfigured"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"type":"error","name":"OperatorStillSlashable"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"type":"error","name":"ZeroPubkey"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"struct BN254.G1Point","name":"newAggregateKey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}],"indexed":false}],"type":"event","name":"AggregateBN254KeyUpdated","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8","indexed":false}],"type":"event","name":"KeyDeregistered","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8","indexed":false},{"internalType":"bytes","name":"pubkey","type":"bytes","indexed":false}],"type":"event","name":"KeyRegistered","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8","indexed":false}],"type":"event","name":"OperatorSetConfigured","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"configureOperatorSet"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"deregisterKey"},{"inputs":[{"internalType":"struct BN254.G1Point","name":"g1Point","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"struct BN254.G2Point","name":"g2Point","type":"tuple","components":[{"internalType":"uint256[2]","name":"X","type":"uint256[2]"},{"internalType":"uint256[2]","name":"Y","type":"uint256[2]"}]}],"stateMutability":"pure","type":"function","name":"encodeBN254KeyData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getBN254Key","outputs":[{"internalType":"struct BN254.G1Point","name":"g1Point","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"struct BN254.G2Point","name":"g2Point","type":"tuple","components":[{"internalType":"uint256[2]","name":"X","type":"uint256[2]"},{"internalType":"uint256[2]","name":"Y","type":"uint256[2]"}]}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"bytes","name":"keyData","type":"bytes"}],"stateMutability":"view","type":"function","name":"getBN254KeyRegistrationMessageHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getECDSAAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getECDSAKey","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"keyAddress","type":"address"}],"stateMutability":"view","type":"function","name":"getECDSAKeyRegistrationMessageHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getKeyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"bytes","name":"keyData","type":"bytes"}],"stateMutability":"view","type":"function","name":"getOperatorFromSigningKey","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"getOperatorSetCurveType","outputs":[{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isKeyGloballyRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerKey"},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"configureOperatorSet((address,uint32),uint8)":{"details":"Only authorized callers for the AVS can configure operator sets","params":{"curveType":"Type of curve (ECDSA, BN254)","operatorSet":"The operator set to configure"}},"deregisterKey(address,(address,uint32))":{"details":"Can be called by the operator directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredReverts if operator is still slashable for the operator set (prevents key rotation while slashable)Keys remain in global key registry to prevent reuse","params":{"operator":"Address of the operator to deregister key for","operatorSet":"The operator set to deregister the key from"}},"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))":{"params":{"g1Point":"The BN254 G1 public key","g2Point":"The BN254 G2 public key"},"returns":{"_0":"The encoded key data"}},"getBN254Key((address,uint32),address)":{"details":"Reverts if the operatorSet is not configured for BN254","params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key for"},"returns":{"g1Point":"The BN254 G1 public key","g2Point":"The BN254 G2 public key"}},"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)":{"params":{"keyData":"The BN254 key data","operator":"The operator address","operatorSet":"The operator set"},"returns":{"_0":"The message hash for signing"}},"getECDSAAddress((address,uint32),address)":{"details":"Reverts if the operatorSet is not configured for ECDSA","params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key for"},"returns":{"_0":"pubkey The ECDSA public key in address format"}},"getECDSAKey((address,uint32),address)":{"details":"Reverts if the operatorSet is not configured for ECDSA","params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key for"},"returns":{"_0":"pubkey The ECDSA public key in bytes format"}},"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)":{"params":{"keyAddress":"The address of the key","operator":"The operator address","operatorSet":"The operator set"},"returns":{"_0":"The message hash for signing"}},"getKeyHash((address,uint32),address)":{"details":"Reverts if the operatorSet is not configured","params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key hash for"},"returns":{"_0":"keyHash The key hash"}},"getOperatorFromSigningKey((address,uint32),bytes)":{"details":"This function decodes the key data based on the curve type of the operator setThis function will return the operator address even if the operator is not registered for the operator set","params":{"keyData":"The key data. For ECDSA, this is the signing key address. For BN254, this can be either the G1 key or the G1 and G2 key combined.","operatorSet":"The operator set to get the operator for"},"returns":{"_0":"operator. Returns 0x0 if the key is not registered","_1":"status registration status. Returns false if the key is not registered"}},"getOperatorSetCurveType((address,uint32))":{"params":{"operatorSet":"The operator set to get the curve type for"},"returns":{"_0":"The curve type, either ECDSA, BN254, or NONE"}},"isKeyGloballyRegistered(bytes32)":{"params":{"keyHash":"Hash of the key"},"returns":{"_0":"True if the key is globally registered"}},"isRegistered((address,uint32),address)":{"details":"If the operatorSet is not configured, this function will return false","params":{"operator":"Address of the operator","operatorSet":"The operator set to check"},"returns":{"_0":"True if the key is registered, false otherwise"}},"registerKey(address,(address,uint32),bytes,bytes)":{"details":"Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registeredThere exist no restriction on the state of the operator with respect to the operatorSet. That is, an operator      does not have to be registered for the operator in the `AllocationManager` to register a key for it","params":{"operator":"Address of the operator to register key for","operatorSet":"The operator set to register the key for","pubkey":"Public key bytes. For ECDSA, this is the address of the key. For BN254, this is the G1 and G2 key combined (see `encodeBN254KeyData`)","signature":"Signature proving ownership. For ECDSA this is a signature of the `getECDSAKeyRegistrationMessageHash`. For BN254 this is a signature of the `getBN254KeyRegistrationMessageHash`."}},"version()":{"returns":{"_0":"The version string in SemVer format (e.g., \"1.1.1\")"}}},"version":1},"userdoc":{"kind":"user","methods":{"configureOperatorSet((address,uint32),uint8)":{"notice":"Configures an operator set with curve type"},"deregisterKey(address,(address,uint32))":{"notice":"Deregisters a cryptographic key for an operator with a specific operator set"},"encodeBN254KeyData((uint256,uint256),(uint256[2],uint256[2]))":{"notice":"Encodes the BN254 key data into a bytes array"},"getBN254Key((address,uint32),address)":{"notice":"Gets the BN254 public key for an operator with a specific operator set"},"getBN254KeyRegistrationMessageHash(address,(address,uint32),bytes)":{"notice":"Returns the message hash for BN254 key registration"},"getECDSAAddress((address,uint32),address)":{"notice":"Gets the ECDSA public key for an operator with a specific operator set"},"getECDSAKey((address,uint32),address)":{"notice":"Gets the ECDSA public key for an operator with a specific operator set as bytes"},"getECDSAKeyRegistrationMessageHash(address,(address,uint32),address)":{"notice":"Returns the message hash for ECDSA key registration"},"getKeyHash((address,uint32),address)":{"notice":"Gets the key hash for an operator with a specific operator set"},"getOperatorFromSigningKey((address,uint32),bytes)":{"notice":"Gets the operator from signing key"},"getOperatorSetCurveType((address,uint32))":{"notice":"Gets the curve type for an operator set"},"isKeyGloballyRegistered(bytes32)":{"notice":"Checks if a key hash is globally registered"},"isRegistered((address,uint32),address)":{"notice":"Checks if a key is registered for an operator with a specific operator set"},"registerKey(address,(address,uint32),bytes,bytes)":{"notice":"Registers a cryptographic key for an operator with a specific operator set"},"version()":{"notice":"Returns the semantic version string of the contract."}},"version":1}},"settings":{"remappings":["@eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","@eigenlayer-middleware/=lib/eigenlayer-middleware/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","@project/=../../contracts/src/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol":"IKeyRegistrar"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol":{"keccak256":"0xfbcc4034cb09f2f5c791538f197f0b0cd58179788cc97d4f62c57d89b47332b8","urls":["bzz-raw://b286eda2e253a1d377f7ddf7ff3c774649867948dd6264213c543ce0d597638c","dweb:/ipfs/QmXKVD8JmT8nK9BULUbhY6M2GciRa3d7GP9EiN2zFdHdJF"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol":{"keccak256":"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791","urls":["bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e","dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol":{"keccak256":"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc","urls":["bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc","dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812","urls":["bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41","dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"],"license":"BUSL-1.1"}},"version":1},"id":15}